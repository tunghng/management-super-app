---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    user: "0:0"
    volumes:
      - ./zookeeper-data:/var/lib/zookeeper/data
      - ./.zookeeper-logs:/var/lib/zookeeper/log

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    user: "0:0"
    volumes:
      - ./.kafka-logs:/logs
      - ./kafka-data:/var/lib/kafka/data

  discovery-server:
    image: ttqteo/im-discovery:1.0.1
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    platform: linux/amd64

  ipm-data:
    container_name: ipm-data
    image: postgres:12-alpine
    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=${DB_DATA}
    command: -p ${DB_PORT}
    volumes:
      - ./${DB_LOCAL_DIR}:${DB_DATA}
      - ./init.local.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  ipm-pgadmin:
    container_name: ipm-pgadmin
    image: dpage/pgadmin4
    volumes:
      - pgadmin4_data:/var/lib/pgadmin4/data
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    ports:
      - "5050:80"
    depends_on:
      - ipm-data

volumes:
  pgadmin4_data: { }